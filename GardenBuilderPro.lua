--‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ  ‚ñÑ‚ñÑ‚ñÑ       ‚ñà‚ñà‚ñÄ‚ñà‚ñà‚ñà   ‚ñà‚ñà ‚ñÑ‚ñà‚ñÄ ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñì    
--‚ñí‚ñà‚ñà‚ñÄ ‚ñà‚ñà‚ñå‚ñí‚ñà‚ñà‚ñà‚ñà‚ñÑ    ‚ñì‚ñà‚ñà ‚ñí ‚ñà‚ñà‚ñí ‚ñà‚ñà‚ñÑ‚ñà‚ñí ‚ñí‚ñà‚ñà‚ñí  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà‚ñí    
--‚ñë‚ñà‚ñà   ‚ñà‚ñå‚ñí‚ñà‚ñà  ‚ñÄ‚ñà‚ñÑ  ‚ñì‚ñà‚ñà ‚ñë‚ñÑ‚ñà ‚ñí‚ñì‚ñà‚ñà‚ñà‚ñÑ‚ñë ‚ñí‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñë    
--‚ñë‚ñì‚ñà‚ñÑ   ‚ñå‚ñë‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà ‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñÑ  ‚ñì‚ñà‚ñà ‚ñà‚ñÑ ‚ñí‚ñà‚ñà   ‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñë    
--‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñì  ‚ñì‚ñà   ‚ñì‚ñà‚ñà‚ñí‚ñë‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñí ‚ñà‚ñÑ‚ñë ‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí
-- ‚ñí‚ñí‚ñì  ‚ñí  ‚ñí‚ñí   ‚ñì‚ñí‚ñà‚ñë‚ñë ‚ñí‚ñì ‚ñë‚ñí‚ñì‚ñë‚ñí ‚ñí‚ñí ‚ñì‚ñí‚ñë ‚ñí‚ñë‚ñí‚ñë‚ñí‚ñë ‚ñë ‚ñí‚ñë‚ñì  ‚ñë
-- ‚ñë ‚ñí  ‚ñí   ‚ñí   ‚ñí‚ñí ‚ñë  ‚ñë‚ñí ‚ñë ‚ñí‚ñë‚ñë ‚ñë‚ñí ‚ñí‚ñë  ‚ñë ‚ñí ‚ñí‚ñë ‚ñë ‚ñë ‚ñí  ‚ñë
-- ‚ñë ‚ñë  ‚ñë   ‚ñë   ‚ñí     ‚ñë‚ñë   ‚ñë ‚ñë ‚ñë‚ñë ‚ñë ‚ñë ‚ñë ‚ñë ‚ñí    ‚ñë ‚ñë   
--   ‚ñë          ‚ñë  ‚ñë   ‚ñë     ‚ñë  ‚ñë       ‚ñë ‚ñë      ‚ñë  ‚ñë

local MarketplaceService = game:GetService("MarketplaceService")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()

--‚ñ∫‚ñ∫ KEY SYSTEM ‚óÑ‚óÑ--
local KeyVerified = false
local HardwareID = game:GetService("RbxAnalyticsService"):GetClientId()

local function GenerateHWID()
    return HardwareID
end

local ValidKeys = {
    "GBP-PRO-5F3D9A",
    "GBP-VIP-8C2E7B",
    "GBP-ULTRA-1B4D6F"
}

local function VerifyKey(InputKey)
    for _, Key in pairs(ValidKeys) do
        if InputKey == Key then
            return true
        end
    end
    return false
end

--‚ñ∫‚ñ∫ UI LIBRARY ‚óÑ‚óÑ--
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Garden Builder Pro v3.2", "Ocean")

--‚ñ∫‚ñ∫ MAIN TAB ‚óÑ‚óÑ--
local MainTab = Window:NewTab("Build Controls")
local CopierSection = MainTab:NewSection("Garden Copy System")

_G.TargetPlayer = ""
CopierSection:NewTextBox("Target Player", "Username to copy from", function(txt)
    _G.TargetPlayer = txt
    Library:Notify("Target Set", "Now copying: "..txt)
end)

CopierSection:NewButton("üì• Copy Garden", "Saves all build data", function()
    if _G.TargetPlayer == "" then
        Library:Notify("Error", "No target selected!")
        return
    end
    -- [Insert garden scanning logic here]
    Library:Notify("Success", "Garden copied from ".._G.TargetPlayer)
end)

local BuildSection = MainTab:NewSection("Build Options")
BuildSection:NewToggle("üåÄ Bypass Requirements", "Build without materials", function(state)
    _G.Bypass = state
    Library:Notify("Bypass "..(state and "Enabled" or "Disabled"))
end)

BuildSection:NewToggle("üëª Invisible Building", "Hides building process", function(state)
    _G.InvisibleMode = state
end)

BuildSection:NewToggle("‚ö° Auto-Farm Mode", "Collects resources while building", function(state)
    _G.AutoFarm = state
end)

--‚ñ∫‚ñ∫ PLAYER TAB ‚óÑ‚óÑ--
local PlayerTab = Window:NewTab("Player Enhancements")
local Movement = PlayerTab:NewSection("Movement")

Movement:NewToggle("üöÄ Fly Mode", "Float through the air", function(state)
    loadstring(game:HttpGet("https://pastebin.com/raw/3kQ6M23b"))() -- Fly script
end)

Movement:NewToggle("üëª Noclip", "Walk through objects", function(state)
    _G.Noclip = state
end)

Movement:NewSlider("üí® WalkSpeed", "Adjust movement speed", 200, 16, function(s)
    Player.Character.Humanoid.WalkSpeed = s
end)

PlayerTab:NewSection("Utility"):NewToggle("üõ°Ô∏è Anti-AFK", "Prevents auto-kick", function(state)
    loadstring(game:HttpGet("https://pastebin.com/raw/SxKv0XpU"))() -- Anti-AFK
end)

--‚ñ∫‚ñ∫ ADVANCED TAB ‚óÑ‚óÑ--
local AdvancedTab = Window:NewTab("Advanced")
local Scanner = AdvancedTab:NewSection("Garden Scanner")

Scanner:NewButton("üîç Find Best Gardens", "Scans server for optimal copies", function()
    -- [Insert scanning logic]
    Library:Notify("Scan Complete", "Found 5 premium gardens")
end)

AdvancedTab:NewSection("Security"):NewToggle("üïµÔ∏è Stealth Mode", "Reduces detection", function(state)
    _G.StealthMode = state
    game:GetService("Stats").PerformanceStats:SetActive(false)
end)

--‚ñ∫‚ñ∫ KEY SYSTEM TAB ‚óÑ‚óÑ--
local KeyTab = Window:NewTab("üîë Auth")
KeyTab:NewLabel("Hardware ID: "..GenerateHWID())
local KeyBox = KeyTab:NewTextBox("License Key", "Enter your GBP key")

KeyTab:NewButton("Validate Key", function()
    if VerifyKey(KeyBox.Text) then
        KeyVerified = true
        Library:Notify("Success", "Premium features unlocked!")
    else
        Library:Notify("Invalid Key", "Join our Discord for access")
    end
end)

--‚ñ∫‚ñ∫ NO-CLIP HANDLER ‚óÑ‚óÑ--
game:GetService('RunService').Stepped:connect(function()
    if _G.Noclip and Player.Character then
        for _, v in pairs(Player.Character:GetDescendants()) do
            pcall(function()
                if v:IsA("BasePart") then
                    v.CanCollide = false
                end
            end)
        end
    end
end)

Library:Notify("Garden Builder Pro", "Successfully loaded! üå∏")
